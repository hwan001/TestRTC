events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:8080;
    }

    upstream frontend {
        server frontend:3000;
    }

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for"';

    # access_log /mnt/logs/nginx/access.log main;
    # error_log /mnt/logs/nginx/error.log;

    server {
        listen 8081;
        server_name _;

        location /signaling {
            proxy_pass http://backend;

            proxy_set_header Host $host;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 원래 클라이언트 IP 전달 관련 설정 (수정)
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 클라이언트의 실제 IP를 신뢰할 수 있는 소스로 설정 (추가)
            set_real_ip_from 0.0.0.0/0;  # 모든 프록시에서의 X-Forwarded-For 허용
            real_ip_header X-Forwarded-For;

            # # sse 옵션
            # proxy_buffering off;
            # proxy_cache off;
            # proxy_read_timeout 3600s;
            # chunked_transfer_encoding off;
            # add_header Cache-Control no-cache;
        }


        location / {
            try_files $uri $uri/ @frontend;
        }


        location @frontend {
            proxy_pass http://frontend;
            proxy_set_header Host $host;

            # 원래 클라이언트 IP 전달 관련 설정 (수정)
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 클라이언트의 실제 IP를 신뢰할 수 있는 소스로 설정 (추가)
            set_real_ip_from 0.0.0.0/0;
            real_ip_header X-Forwarded-For;
        }
    }
}